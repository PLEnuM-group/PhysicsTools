var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = PhysicsTools","category":"page"},{"location":"#PhysicsTools","page":"Home","title":"PhysicsTools","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for PhysicsTools.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [PhysicsTools, PhysicsTools.Types, PhysicsTools.Utils]","category":"page"},{"location":"#PhysicsTools.Utils.CategoricalSetDistribution","page":"Home","title":"PhysicsTools.Utils.CategoricalSetDistribution","text":"CategoricalSetDistribution{T, U<:Real}\n\nRepresents a Categorical distribution on a set\n\nExamples\n\np = CategoricalSetDistribution(Set([:EMinus, :EPlus]), Categorical([0.1, 0.9]))  rand(p) – returns :EMinus with 10% probability and :Eplus with 90% probability\np = CategoricalSetDistribution(Set([:EMinus, :EPlus]), [0.1, 0.9]) – convenience constructor\n\n\n\n\n\n","category":"type"},{"location":"#PhysicsTools.Utils.apply_rot-Tuple{Any, Any, Any}","page":"Home","title":"PhysicsTools.Utils.apply_rot","text":"apply_rot(a, b, operand)\n\nCalculates rotation matrix obtained by rotating a to b. Apply to operand. Apply the resulting rotation to operand.\n\n\n\n\n\n","category":"method"},{"location":"#PhysicsTools.Utils.fast_linear_interp-Union{Tuple{T}, Tuple{T, AbstractVector{T}, AbstractVector{T}}} where T","page":"Home","title":"PhysicsTools.Utils.fast_linear_interp","text":"fast_linear_interp(x_eval::T, xs::AbstractVector{T}, ys::AbstractVector{T})\n\nLinearly interpolate xs -> ys and evaluate x_eval on interpolation. Assume xs are sorted in ascending order.\n\n\n\n\n\n","category":"method"},{"location":"#PhysicsTools.Utils.fwhm-Tuple{Distributions.UnivariateDistribution, Real}","page":"Home","title":"PhysicsTools.Utils.fwhm","text":"fwhm(d::UnivariateDistribution, xmode::Real; xlims=(-20, 20))\n\nCalculate FWHM of a univariate distribution\n\n\n\n\n\n","category":"method"},{"location":"#PhysicsTools.Utils.rand_gamma-Union{Tuple{U}, Tuple{Real, Real}, Tuple{Real, Real, Type{U}}} where U<:Real","page":"Home","title":"PhysicsTools.Utils.rand_gamma","text":"rand_gamma(shape, scale)\n\nSample gamma variates when shape > 1\n\n\n\n\n\n","category":"method"},{"location":"#PhysicsTools.Utils.repeat_for-Tuple{AbstractMatrix, AbstractVector}","page":"Home","title":"PhysicsTools.Utils.repeat_for","text":"repeat_for(x::AbstractMatrix, n::AbstractVector)\n\nRepeat each slice along the second dimension of x for n times\n\n\n\n\n\n","category":"method"},{"location":"#PhysicsTools.Utils.sample_cherenkov_track_direction-Tuple{Type}","page":"Home","title":"PhysicsTools.Utils.sample_cherenkov_track_direction","text":"\n\n\n\n","category":"method"},{"location":"#PhysicsTools.Utils.split_by!-Tuple{AbstractVector, AbstractVector, Any}","page":"Home","title":"PhysicsTools.Utils.split_by!","text":"split_by!(x::AbstractVector, n::AbstractVector, out)\n\nWrite output into out\n\n\n\n\n\n","category":"method"},{"location":"#PhysicsTools.Utils.split_by-Tuple{AbstractVector, AbstractVector}","page":"Home","title":"PhysicsTools.Utils.split_by","text":"split_by(x::AbstractVector, n::AbstractVector)\n\nSplit vector x into parts, where the split indices are given by vector n.\n\n\n\n\n\n","category":"method"}]
}
